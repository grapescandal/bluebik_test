4.  SELECT count(*) AS total FROM orders;
    +-------+
    | total |
    +-------+
    | 100 |
    +-------+
    
    SELECT count(*) AS cust_123_total FROM orders WHERE customer_id = '123';
    +---------------------+
    | cust_123_total |
    +---------------------+
    | 15 |
    +---------------------+

    SELECT count(*) AS cust_not_123_total FROM orders WHERE customer_id <> '123';
    +---------------------+
    | cust_not_123_total |
    +---------------------+
    | 85 |
    +---------------------+

5.  2xx Success
        Request ที่ Client ส่งไปยัง Server ถูกประมวลผลเรียบร้อยและไม่มี Error ใดๆ
        Status 2xx ที่พบบ่อย 
            200 OK เป็นการตอบสนองแบบมาตรฐานเมื่อ Request HTTP สำเร็จ
            204 No Content Server ตอบกลับ แต่ไม่มี data ใดๆ
    3xx Redirection
        Request ที่ Client ส่งไปยัง server นั้นถูก Redirect ไปประมวลผลที่อื่น เพื่อทำให้ Process สำเร็จ
    4xx Client Error
        Status นี้จะเกิดขึ้นก็ต่อเมื่อมี Error ที่มาจาก Request Body ของ Client ผิดพลาด, URL ผิด หรือ Syntax ผิดก็ตาม
        Status 4xx ที่พบบ่อย 
            400 Bad Request client ส่ง syntax หรือ body request ไม่ถูกต้อง
            401 Unauthorized client ยัง ไม่ได้ระบุตัวตน หรือไม่มี header
            403 Forbidden client ระบุตัวตนแล้วแต่ไม่มีสิทธิ์เข้าถึงส่วนนี้
            404 Not Found ไม่พบ Route ที่ร้องขอ
            405 Method Not Allowed ส่ง request method ที่ไม่ถูกต้องไป (get, post, put หรือ delete)
    5xx (Server Error)
        Status นี้จะเกิดขึ้นต่อเมื่อ Server มีปัญหาบางอย่าง
        Status 4xx ที่พบบ่อย 
        500 Internal Server Error หรือ มีข้อผิดพลาดบางอย่างภายใน server โดยไม่ทราบสาเหตุ
        502 Bad Gateway Server เป็น Gateway หรือ Proxy ได้รับ response ผิดพลาดจาก server อื่น
        503 Service Unavailable Server ดับ ต่อไม่ได้
        504 Gateway Timeout ต่อ Server ไม่ได้จน timeout

6.  Cookie เป็นไฟล์เล็กๆที่เว็บเซิร์ฟเวอร์ ส่งให้ Browser เก็บเอาไว้หรือก็คือเก็บในเครื่องของผู้ใช้งาน โดยเมื่อไหร่ก็ตามที่ Cookie ถูกส่งไปเก็บไว้ในเบราเซอร์เรียบร้อยแล้ว 
    เวลาที่ผู้ใช้ใช้งานเว็บไซต์ที่เป็นเจ้าของ Cookie Browser ก็จะส่งข้อมูล Cookie นั้นติดไปกับ Request ต่างๆทุกครั้ง ซึ่งไฟล์ Cookie นี้จะอยู่ใน Browser ของผู้ใช้ไปตลอดจนกว่าจะถูกลบโดยผู้ใช้เอง

    Session คือข้อมูลที่เก็บเอาไว้ในฝั่ง Server โดยแต่ละผู้ใช้งานหรือก็คือเบราเซอร์หนึ่งจะถูกเก็บไว้โดยมี unique id กำกับในแต่ละ Session เอาไว้ ซึ่งตัว id ดังกล่าวจะถูกส่งไปที่เบราเซอร์และเก็บในรูปแบบ Cookie อีกที 
    เวลาที่ผู้ใช้ ใช้งานเว็บไซต์นั้นก็จะส่ง id ไปยังเซิร์ฟเวอร์ด้วย แล้วเซิร์ฟเวอร์ะนำ id ไปดึงข้อมูล Session ที่เก็บไว้ออกมาอีกที ซึ่งข้อมูล Session จะเป็นข้อมูลชั่วคราวที่หมดอายุหลังจากที่ผู้ใช้ออกจากเว็บไป

    Cookie ค่อนข้างอันตราย เนื่องจากเก็บไว้ที่เครื่องของ User ไม่ควรเก็บรหัสผ่าน ควรเก็บข้อมูลที่นำไปใช้ได้อย่างถาวร หรือใช้ได้เป็นเวลานานจนกว่าจะมีการเปลี่ยนแปลงใหม่ๆ
    Session การที่ข้อมูลถูกเก็บอยู่ที่เซิร์ฟเวอร์ทำให้สามารถเก็บข้อมูลได้ทุกประเภท อย่างเช่น ข้อมูลการเข้าสู่ระบบ 

7.  Cross Origin Resource Sharing (CORS) คือกลไกที่ทำให้เว็บเซิร์ฟเวอร์สามารถอนุญาต หรือไม่อนุญาต การร้องขอทรัพยากรใดๆ ในหน้าเว็บ ที่ถูกเรียกมาจากโดเมนอื่น ที่ไม่ใช่โดเมนที่หน้าเว็บนั้นอยู่
    หน้าเว็บใดๆ ในเว็บไซต์ test.com มีการเรียกข้อมูลใดๆ ก็ตามจากหลังบ้านของเรา หากหลังบ้านของเราไม่ได้อนุญาตให้ เว็บ test.com เอาข้อมูลไปใช้ได้ ก็จะไม่สามารถทำได้
    ตัวอย่างการใช้งาน golang

    func enableCors(w *http.ResponseWriter) {
        (*w).Header().Set("Access-Control-Allow-Origin", "*")
    }

    enableCors(&w)

   เป็นการ set ให้ทุกๆ เว็บไซต์สามารถเรียก API เข้ามาที่หลังบ้านได้

8.  TCP เป็นโปรโตคอลที่เน้นการเชื่อมต่อ มีการตรวจสอบข้อมูลที่ถึงผู้รับ ว่าถูกต้องหรือไม่ ใช้งานกับการเชื่อมต่อทั่วไป เว็บไซต์ server
    UDP เป็นโปรโตคอลที่ไม่มีการเชื่อมต่อ เน้นความรวดเร็ว ไม่มีการตรวจสอบข้อมูลที่ถึงผู้รับ ใช้งานส่วนใหญ่กับ เกม หรือ สิ่งที่มีการรับส่งข้อมูล Realtime

9.  Encryption เป็นการเข้ารหัสข้อมูลเพื่อปกป้องความลับ 
    Encoding เป็นการแปลงรูปแบบข้อมูลให้อยู่ในรูปแบบที่แตกต่าง
    Hashing เป็นการแปลงข้อมูลให้เป็นค่าคงที่ที่ไม่สามารถแก้ไขได้ และไม่สามารถถอดรหัสข้อมูลได้

10. Class คือ แม่แบบของ Object ที่มี ตัวแปร การทำงานต่างๆอยู่ข้างใน
    Object ในการเขียนภาษาที่มี Based on OOP การที่ใช้ new จะเป็นการสร้าง Entity ของ Class นั้นๆขึ้นมา เพื่อนำไปใช้งานต่อ ซึ่งถูกเรียกว่า Object
    Interface เป็นแม่แบบของ Class อีกที ที่เก็บตัวแปรและ Abstract function ที่ไม่มี Body เอาไว้ ไว้เตรียมสำหรับการ Implement อีกทอด

